#include <Servo.h>
#include <SoftwareSerial.h>
#include <Wire.h>
#include <SPI.h>
#include <TFT_eSPI.h>  

const int irSensorInPin = 2;
const int irSensorOutPin = 3;
const int ledPin = 13;
const int servoPin = 9;

TFT_eSPI tft = TFT_eSPI();  
Servo doorServo;
SoftwareSerial rfidSerial(8, 7); 

bool customerExited = false;
float totalPrice = 0.0;
const int openDoorAngle = 90;
const int closeDoorAngle = 0;

void setup() {

  pinMode(irSensorInPin, INPUT);
  pinMode(irSensorOutPin, INPUT);
  pinMode(ledPin, OUTPUT);

  Serial.begin(9600);
  rfidSerial.begin(9600);

  tft.begin();
  tft.setRotation(1); 
  tft.fillScreen(TFT_BLACK);  
  tft.setTextColor(TFT_WHITE, TFT_BLACK);  
  tft.setTextSize(2);  

  doorServo.attach(servoPin);
  doorServo.write(closeDoorAngle);

  tft.setCursor(20, 50);
  tft.println("Welcome to Jiffy Machine");
}

void loop() {
  // Check if customer has entered or exited
  if (digitalRead(irSensorInPin) == HIGH) {
    // Customer entered, read RFID tags 
    readRFIDTags();
  } else if (digitalRead(irSensorOutPin) == HIGH) {
    // Customer exited
    customerExited = true;
    totalPrice = 0.0;
    displayMessage("Bill reset to 0");
  }

  // Display total price
  displayPrice();

  // Handle payment if customer has exited
  if (customerExited) {
    handlePayment();
  }

  delay(500); // Short delay to avoid rapid looping
}

void readRFIDTags() {
  // Read RFID tags and calculate total price
  while (rfidSerial.available() > 0) {
    String rfidData = rfidSerial.readStringUntil('\n');
    // Extract price from RFID data (implement your own extraction logic here)
    float price = extractPriceFromRFID(rfidData);
    totalPrice += price;
  }
}

float extractPriceFromRFID(String rfidData) {
  // Placeholder function to extract price from RFID data
  // Implement your own logic here
  return rfidData.toFloat(); // Assuming RFID data is just the price for simplicity
}

void displayPrice() {
  // Display total price on the TFT screen
  tft.setCursor(20, 100);
  tft.print("Total Price: ");
  tft.println(totalPrice);
}

void handlePayment() {
  // Display payment instructions on the TFT screen
  tft.setCursor(20, 150);
  tft.println("Scan your card to pay");

  // Wait for card scan
  while (true) {
    if (rfidSerial.available() > 0) {
      String cardData = rfidSerial.readStringUntil('\n');
      // Implement payment verification logic here (dummy example)
      if (cardData.startsWith("CARD_")) {
        displayMessage("Payment successful!");
        digitalWrite(ledPin, HIGH);
        doorServo.write(openDoorAngle);
        delay(5000); // Keep door open for 5 seconds
        doorServo.write(closeDoorAngle);
        digitalWrite(ledPin, LOW);
        displayMessage("Thank you! Come again!");
        customerExited = false;
        break;
      } else {
        displayMessage("Payment failed. Try again.");
      }
    }
    delay(100); // Adjust delay as needed
  }
}

void displayMessage(String message) {
  // Display a message on the TFT screen
  tft.fillScreen(TFT_BLACK);  // Clear the screen
  tft.setCursor(20, 50);
  tft.println(message);
}
